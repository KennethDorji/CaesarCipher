/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package swing;
import java.util.Scanner; 
import java.util.Random; 


/**
 *
 * @author juice
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        encrypt = new java.awt.Button();
        decrypt = new java.awt.Button();
        jComboBox1 = new javax.swing.JComboBox<>();
        key = new java.awt.TextField();
        textField3 = new java.awt.TextField();
        randomKey = new java.awt.Button();
        clear = new java.awt.Button();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setPreferredSize(new java.awt.Dimension(1100, 650));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        encrypt.setActionCommand("Encrypt");
        encrypt.setLabel("Encrypt");
        encrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptActionPerformed(evt);
            }
        });
        getContentPane().add(encrypt, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 420, -1, -1));

        decrypt.setLabel("Decrypt");
        decrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptActionPerformed(evt);
            }
        });
        getContentPane().add(decrypt, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 420, -1, -1));

        jComboBox1.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 280, -1, -1));

        key.setBackground(new java.awt.Color(255, 255, 255));
        key.setText("Key:");
        getContentPane().add(key, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 280, -1, -1));

        textField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField3ActionPerformed(evt);
            }
        });
        getContentPane().add(textField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 310, 40, 25));

        randomKey.setLabel("Random Key:");
        randomKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomKeyActionPerformed(evt);
            }
        });
        getContentPane().add(randomKey, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 310, -1, -1));

        clear.setLabel("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        getContentPane().add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 380, -1, -1));

        jLabel1.setFont(new java.awt.Font("Noteworthy", 3, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 255, 255));
        jLabel1.setText("Caesar Cipher");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 70, -1, -1));

        jTextArea1.setBackground(new java.awt.Color(0, 153, 153));
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 260, 180));

        jTextArea2.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 300, 260, 180));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/background.jpg"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-190, -150, 1320, 900));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void encryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptActionPerformed
        // TODO add your handling code here:
        String userInput = jTextArea1.getText(); 
        int key = 0; 

        if (textField3.getText().equals(""))   {
            String keyDrop = (String)jComboBox1.getSelectedItem(); 
            key = Integer.parseInt(keyDrop);  
        }
        
        else {
            String randomKey = textField3.getText(); 
            int randKey = Integer.parseInt(randomKey);
            key = randKey;   
        }
        
        String encryptedMessage = ""; 
        char ch; 
        
           for (int i = 0; i < userInput.length(); ++i) {
            ch = userInput.charAt(i);

            if (ch >= 'a' && ch <= 'z') {
                ch = (char) (ch + key);

                if (ch > 'z') {
                    ch = (char) (ch - 'z' + 'a' - 1);
                }

                encryptedMessage += ch;
            } 
            else if (ch >= 'A' && ch <= 'Z') {
                ch = (char) (ch + key);

                if (ch > 'Z') {
                    ch = (char) (ch - 'Z' + 'A' - 1);
                }

                encryptedMessage += ch;
            } 
            else {
                encryptedMessage += ch;
            }
        }
        
        jTextArea2.setText(encryptedMessage); 
       
    }//GEN-LAST:event_encryptActionPerformed

    private void decryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptActionPerformed
        // TODO add your handling code here:
        String userInput = jTextArea1.getText(); 
        int key = 0; 
        
        if (textField3.getText().equals(""))   {
            String keyDrop = (String)jComboBox1.getSelectedItem(); 
            key = (Integer.parseInt(keyDrop));  
        }
        
        else {
            String randomKey = textField3.getText(); 
            int randKey = Integer.parseInt(randomKey);
            key = randKey;   
        }
        
        String decryptedMessage = ""; 
        char ch; 
        
        for (int i = 0; i < userInput.length(); ++i) {
            ch = userInput.charAt(i);

            if (ch >= 'a' && ch <= 'z') {
                ch = (char) (ch - key);

                if (ch < 'a') {
                    ch = (char) (ch + 'z' - 'a' + 1);
                }
                decryptedMessage += ch;
            } 
            else if (ch >= 'A' && ch <= 'Z') {
                ch = (char) (ch - key);

                if (ch < 'A') {
                    ch = (char) (ch + 'Z' - 'A' + 1);
                }

                decryptedMessage += ch;
            } 
            else {
                decryptedMessage += ch;
            }
        }
        
        jTextArea2.setText(decryptedMessage);
    }//GEN-LAST:event_decryptActionPerformed

    private void textField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textField3ActionPerformed

    private void randomKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomKeyActionPerformed
     
        Random rand = new Random(); 
        // Addding 1 Since we obtain a number between [0 - 49] when using random.
        int randomNum = 1 + (rand.nextInt(26)); 
        // Parsing int to string to display the number in the Text Box. 
        String randNum = Integer.toString(randomNum); 
        textField3.setText(randNum);
        /* Resetting the value of a JComboBox. Since the user is using Random 
           number 
        */
        jComboBox1.setSelectedIndex(0); 
    }//GEN-LAST:event_randomKeyActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // Resetting both the Random Text Feild and JComboBox. 
        textField3.setText(""); 
        jComboBox1.setSelectedIndex(0); 
    }//GEN-LAST:event_clearActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        
        // Resetting Random Text Feild since the user is using JComboBox.
//        if(jComboBox1.getItemCount() > 0){
//            textField3.setText("");   
//        }
       
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button clear;
    private java.awt.Button decrypt;
    private java.awt.Button encrypt;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private java.awt.TextField key;
    private java.awt.Button randomKey;
    private java.awt.TextField textField3;
    // End of variables declaration//GEN-END:variables
}
